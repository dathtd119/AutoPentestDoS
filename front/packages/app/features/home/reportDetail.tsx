import {
  Anchor,
  Button,
  Card,
  H1,
  H2,
  H3,
  H4,
  H5,
  Paragraph,
  Separator,
  useToastController,
  XStack,
  YStack,
  ScrollView
} from '@my/ui'
import React, { useEffect, useState } from 'react'
import {} from '@tamagui/lucide-icons'

import { FlatList, View } from 'react-native'



function showOpenPorts(victim) {
  const allPorts: string[] = [];
  victim.recon.nettacker.forEach(nettacker => {
    allPorts.push(...nettacker.ports);
  });

  // Sort ports for better scannedPage experience (optional)
  allPorts.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));


  return allPorts.join(', ');

}


function makeDemoAttack() {
  return (
    <View>
      <Paragraph ><strong>Attack: TCP </strong></Paragraph>
      <Paragraph >Success</Paragraph>
      <Paragraph >Avg Ping: 1.068</Paragraph>
      <Paragraph >Max Ping: 14.668</Paragraph>
      <Paragraph >Total Time: 19.961</Paragraph>
      <br/>
      <Paragraph ><strong>Attack: UDP </strong></Paragraph>
      <Paragraph >Success</Paragraph>
      <Paragraph >Avg Ping: 1.035</Paragraph>
      <Paragraph >Max Ping: 8.735</Paragraph>
      <Paragraph >Total Time: 19.656</Paragraph>
      <br/>
      <Paragraph ><strong>Attack: SYN </strong></Paragraph>
      <Paragraph >Success</Paragraph>
      <Paragraph >Avg Ping: 2.433</Paragraph>
      <Paragraph >Max Ping: 22.643</Paragraph>
      <Paragraph >Total Time: 19.866</Paragraph>
      <br/>
      <Paragraph ><strong>Attack: CPS </strong></Paragraph>
      <Paragraph >Success</Paragraph>
      <Paragraph >Avg Ping: 2.815</Paragraph>
      <Paragraph >Max Ping: 14.124</Paragraph>
      <Paragraph >Total Time: 19.964</Paragraph>
      <br/>
      <Paragraph ><strong>Attack: CMP </strong></Paragraph>
      <Paragraph >Success</Paragraph>
      <Paragraph >Avg Ping: 1.035</Paragraph>
      <Paragraph >Max Ping: 8.735</Paragraph>
      <Paragraph >Total Time: 19.656</Paragraph>
      <br/>
      <Paragraph ><strong>Attack: SYN </strong></Paragraph>
      <Paragraph >Success</Paragraph>
      <Paragraph >Avg Ping: 2.433</Paragraph>
      <Paragraph >Max Ping: 22.643</Paragraph>
      <Paragraph >Total Time: 19.866</Paragraph>
      <br/>
      <Paragraph ><strong>Attack: MINECRAFT </strong></Paragraph>
      <Paragraph >Failed</Paragraph>
      <Paragraph >Avg Ping: 1.535</Paragraph>
      <Paragraph >Max Ping: 1.728</Paragraph>
      <Paragraph >Total Time: 19.124</Paragraph>
      <br/>

    </View>
  )
}





function ReportDetail({victim}) {
  console.log("VICTIM REPORT DETAIL: ", victim)
  return (



    <YStack
      fullscreen={true}
      ai="center"
      flex={1}
      flexWrap="wrap-reverse"
      gap="$10"
    >
      <ScrollView
        maxHeight={'100%'}
        width={'75%'}
        padding="$4"
        borderRadius="$4"
      >
        <br /><br />
        <H1>DoS/DDoS Bench-test Report</H1>
        <br /><br />
        <H2>Reconnaissance Activities</H2>
        <br />
        <Paragraph>
          <strong>Victim Information:</strong><br />
          Host Name: {(victim.domain !== '') ? (victim.domain) : '[IP Only]'} <br />
          IP Address: {victim.ip}<br />
          Open Ports: {showOpenPorts(victim)}<br />
          Services & Applications: [Specify if available]<br />
          <br /><br />
          ðŸ›‘ðŸ›‘ðŸ«·ðŸ«· <strong>Under Construction</strong> ðŸ«¸ðŸ«¸âœ‹âœ‹<br />
        </Paragraph>
        <br /><br />
        <H2>DDoS/DoS Pentest Activities</H2>
        <br />
        <H4>Attack Results:</H4><br />
        <strong>Layer 4</strong><br />
        {/*{victim && victim.attack.mhddos > 0 ? (*/}
        {/*  renderAttack(victim.attack.mhddos)*/}

        {/*) : (*/}
        {/*  <H5>No attack data available</H5>*/}
        {/*)}*/}

        {makeDemoAttack()}


        <br /><br />
        <H2>Recommendations</H2>
        <ul>
          <li>
            <strong>Reconnaissance:</strong>
            <ul>
              <li>Gather more detailed information on services and applications running on open ports.</li>
              <li>Identify potential vulnerabilities in the discovered services.</li>
            </ul>
          </li>
        </ul>

      </ScrollView>
    </YStack>
  )
}


export default ReportDetail;